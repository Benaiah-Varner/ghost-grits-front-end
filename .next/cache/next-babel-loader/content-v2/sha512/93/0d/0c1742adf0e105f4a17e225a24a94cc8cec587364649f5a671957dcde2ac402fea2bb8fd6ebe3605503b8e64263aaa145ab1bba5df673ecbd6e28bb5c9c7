{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/Ghost-Grits/frontendd/components/CustomSalad.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { ADD_CUSTOM_ITEM } from './queries/cartQuerie';\nimport { CUSTOM_ITEM_QUERY } from './queries/cartQuerie';\nimport { useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\nimport { useCart } from '../lib/cartState';\nconst dressings = [{\n  label: 'Cesar Dressing',\n  value: 'Cesar Dressing'\n}, {\n  label: 'Lemon Olive Oil Dressing',\n  value: 'Lemon Olive Oil Dressing'\n}, {\n  label: 'Balsamic Vinaigrette',\n  value: 'Balsamic Vinaigrette'\n}, {\n  label: 'Rhubarb Vinaigrette',\n  value: 'Rhubarb Vinaigrette'\n}, {\n  label: 'No Dressing',\n  value: 'No Dressing'\n}];\nconst toppings = [{\n  label: 'Tomatoes',\n  value: 'Tomatoes'\n}, {\n  label: 'Cucumbers',\n  value: 'Cucumbers'\n}, {\n  label: 'Kalamata Olives',\n  value: 'Kalamata Olives'\n}, {\n  label: 'Globe Radish',\n  value: 'Globe Radish'\n}, {\n  label: 'Pickled Banana Peppers',\n  value: 'Pickled Banana Peppers'\n}, {\n  label: 'Bean Sprout',\n  value: 'Bean Sprout'\n}, {\n  label: 'Wild Rice Crisp',\n  value: 'Wild Rice Crisp'\n}, {\n  label: 'Parmesan Cheese',\n  value: 'Parmesan Cheese'\n}];\n\nconst CustomSalad = () => {\n  var _saladState$topping;\n\n  const {\n    0: topping,\n    1: setTopping\n  } = useState();\n  const {\n    0: dressing,\n    1: setDressing\n  } = useState({\n    dressing: ''\n  });\n  const saladState = {\n    topping,\n    dressing\n  };\n  const [addToCart, {\n    loading,\n    data,\n    error\n  }] = useMutation(ADD_CUSTOM_ITEM, {\n    variables: {\n      dressing: saladState.dressing.dressing,\n      toppings: (_saladState$topping = saladState.topping) === null || _saladState$topping === void 0 ? void 0 : _saladState$topping.join(', ')\n    },\n    refetchQueries: [{\n      query: CUSTOM_ITEM_QUERY\n    }]\n  });\n\n  const handleToppings = e => {\n    setTopping(Array.isArray(e) ? e.map(topping => topping.label) : []);\n  };\n\n  const handleChange = async e => {\n    setDressing(_objectSpread(_objectSpread({}, dressing), {}, {\n      dressing: e.value\n    }));\n  };\n\n  const {\n    openCart\n  } = useCart();\n\n  const handleClick = () => {\n    addToCart();\n    openCart();\n  };\n\n  const customStyled = {\n    dropdownIndicator: () => ({\n      color: '#662916',\n      fontsize: '1rem'\n    }),\n    option: () => ({\n      color: '#662916'\n    }),\n    control: () => ({\n      border: '1px solid #662916',\n      borderRadius: '5px',\n      display: 'flex'\n    }),\n    placeholder: () => ({\n      color: '#662916'\n    }),\n    singleValue: () => ({\n      color: '#662916'\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"salad\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Build Your Own Salad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Romaine Leaves, Spring Mix Greens, Baby Swiss Char\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"select\",\n      onChange: handleToppings,\n      className: \"select\",\n      options: toppings,\n      isMulti: true,\n      styles: customStyled,\n      placeholder: \"Choose any two Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"select\",\n      onChange: handleChange,\n      name: \"dressing\",\n      className: \"select\",\n      options: dressings,\n      styles: customStyled,\n      placeholder: \"Choose Your Dressing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"$10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"addToCart\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"icon\",\n        icon: faCartPlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 62\n      }, this), \"Add To Cart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n};\n\nexport default CustomSalad;","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/Ghost-Grits/frontendd/components/CustomSalad.js"],"names":["useState","Select","ADD_CUSTOM_ITEM","CUSTOM_ITEM_QUERY","useMutation","FontAwesomeIcon","faCartPlus","useCart","dressings","label","value","toppings","CustomSalad","topping","setTopping","dressing","setDressing","saladState","addToCart","loading","data","error","variables","join","refetchQueries","query","handleToppings","e","Array","isArray","map","handleChange","openCart","handleClick","customStyled","dropdownIndicator","color","fontsize","option","control","border","borderRadius","display","placeholder","singleValue"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Select from 'react-select';\nimport { ADD_CUSTOM_ITEM } from './queries/cartQuerie';\nimport { CUSTOM_ITEM_QUERY } from './queries/cartQuerie';\nimport { useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\nimport {useCart} from '../lib/cartState';\n\nconst dressings = [\n  { label: 'Cesar Dressing', value: 'Cesar Dressing' },\n  {\n    label: 'Lemon Olive Oil Dressing',\n    value: 'Lemon Olive Oil Dressing',\n  },\n  { label: 'Balsamic Vinaigrette', value: 'Balsamic Vinaigrette' },\n  { label: 'Rhubarb Vinaigrette', value: 'Rhubarb Vinaigrette' },\n  { label: 'No Dressing', value: 'No Dressing' },\n];\n\nconst toppings = [\n  { label: 'Tomatoes', value: 'Tomatoes' },\n  { label: 'Cucumbers', value: 'Cucumbers' },\n  { label: 'Kalamata Olives', value: 'Kalamata Olives' },\n  { label: 'Globe Radish', value: 'Globe Radish' },\n  { label: 'Pickled Banana Peppers', value: 'Pickled Banana Peppers' },\n  { label: 'Bean Sprout', value: 'Bean Sprout' },\n  { label: 'Wild Rice Crisp', value: 'Wild Rice Crisp' },\n  { label: 'Parmesan Cheese', value: 'Parmesan Cheese' },\n];\n\nconst CustomSalad = () => {\n  const [topping, setTopping] = useState(); \n  const [dressing, setDressing] = useState({\n    dressing: '',\n  });\n\n  const saladState = {\n    topping,\n    dressing,\n  };\n\n  const [addToCart, {loading, data, error}] = useMutation(ADD_CUSTOM_ITEM, {\n    variables: {\n      dressing: saladState.dressing.dressing,\n      toppings: saladState.topping?.join(', ')\n    },\n    refetchQueries: [{ query: CUSTOM_ITEM_QUERY }]\n  });\n\n  const handleToppings = (e) => {\n    setTopping(Array.isArray(e) ? e.map((topping) => topping.label) : []);\n  };\n\n  const handleChange = async (e) => {\n    setDressing({\n      ...dressing,\n      dressing: e.value,\n    });\n  };\n\n  const { openCart } = useCart();\n\n  const handleClick = () => {\n    addToCart();\n    openCart();\n  }\n\n  const customStyled = {\n    dropdownIndicator: () => ({\n      color: '#662916',\n      fontsize: '1rem'\n    }),\n    option: () => ({\n      color: '#662916'\n    }),\n    control: () => ({\n      border: '1px solid #662916',\n      borderRadius: '5px',\n      display: 'flex'\n    }),\n    placeholder: () => ({\n      color: '#662916'\n    }),\n    singleValue: () => ({\n      color: '#662916'\n    })\n  };\n\n\n  return (\n      <div className=\"salad\">\n        <h3>Build Your Own Salad</h3>\n        <p>Romaine Leaves, Spring Mix Greens, Baby Swiss Char</p>\n        <Select\n          className='select'\n          onChange={handleToppings}\n          className=\"select\"\n          options={toppings}\n          isMulti\n          styles={customStyled}\n          placeholder='Choose any two Toppings'\n        />\n        <Select\n          className='select'\n          onChange={handleChange}\n          name=\"dressing\"\n          className=\"select\"\n          options={dressings}\n          styles={customStyled}\n          placeholder='Choose Your Dressing'\n        />\n        <span>$10</span>\n        <button onClick={handleClick} className='addToCart'> <FontAwesomeIcon className='icon' icon={faCartPlus} />Add To Cart</button>\n      </div>\n  );\n};\n\nexport default CustomSalad;\n"]},"metadata":{},"sourceType":"module"}