{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { CREATE_ORDER, CREATE_FIXED_ORDER_ITEM, CREATE_CUSTOM_ORDER_ITEM, DELETE_CUSTOM_ITEMS, DELETE_FIXED_ITEMS } from './queries/orderQuerie';\nimport { useMutation } from '@apollo/client';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useRouter } from 'next/router';\nimport { CheckoutStyled } from './styles/CheckoutStyled';\nimport { calcTotalPrice } from '../lib/calcTotalPrice';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons';\nimport { useCart } from '../lib/cartState';\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nconst CheckoutForm = ({\n  fixedItems,\n  customItems\n}) => {\n  var _fixedItems$allFoodCa2, _customItems$allSalad2;\n\n  const {\n    closeCart\n  } = useCart();\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: orderForm,\n    1: setOrderForm\n  } = useState({\n    firstName: '',\n    lastName: '',\n    email: ''\n  });\n  const {\n    0: checkoutOpen,\n    1: setCheckoutOpen\n  } = useState(false);\n  const [deleteFixedItems] = useMutation(DELETE_FIXED_ITEMS);\n  const [deleteCustomItems] = useMutation(DELETE_CUSTOM_ITEMS);\n  const [createCustomOrderItem] = useMutation(CREATE_CUSTOM_ORDER_ITEM);\n  const [createFixedOrderItem] = useMutation(CREATE_FIXED_ORDER_ITEM);\n  const [createOrder] = useMutation(CREATE_ORDER);\n  const router = useRouter();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleChange = e => {\n    setOrderForm(_objectSpread(_objectSpread({}, orderForm), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const fixedPrices = [];\n\n  const foodPrice = () => {\n    var _fixedItems$allFoodCa;\n\n    fixedItems === null || fixedItems === void 0 ? void 0 : (_fixedItems$allFoodCa = fixedItems.allFoodCartItems) === null || _fixedItems$allFoodCa === void 0 ? void 0 : _fixedItems$allFoodCa.map(item => {\n      fixedPrices.push(item.food.price);\n    });\n    return fixedPrices;\n  };\n\n  const customPrices = [];\n\n  const saladPrice = () => {\n    var _customItems$allSalad;\n\n    customItems === null || customItems === void 0 ? void 0 : (_customItems$allSalad = customItems.allSaladCartItems) === null || _customItems$allSalad === void 0 ? void 0 : _customItems$allSalad.map(item => {\n      customPrices.push(item.salad.price);\n    });\n    return customPrices;\n  };\n\n  const fixedFoodPrice = foodPrice().reduce((tally, item) => tally + item, 0);\n  const customFoodPrice = saladPrice().reduce((tally, item) => tally + item, 0);\n  const fixedOrderItem = fixedItems === null || fixedItems === void 0 ? void 0 : (_fixedItems$allFoodCa2 = fixedItems.allFoodCartItems) === null || _fixedItems$allFoodCa2 === void 0 ? void 0 : _fixedItems$allFoodCa2.map((item, key) => {\n    const orderItem = {\n      data: {\n        name: item.food.name,\n        description: item.food.description\n      }\n    };\n    return orderItem;\n  });\n  const customOrderItem = customItems === null || customItems === void 0 ? void 0 : (_customItems$allSalad2 = customItems.allSaladCartItems) === null || _customItems$allSalad2 === void 0 ? void 0 : _customItems$allSalad2.map((item, key) => {\n    const orderItem = {\n      data: {\n        name: item.salad.name,\n        description: item.salad.description,\n        choice_of_dressing: item.salad.choice_of_dressing,\n        choice_of_two_toppings: item.salad.choice_of_two_toppings\n      }\n    };\n    return orderItem;\n  });\n\n  async function convertFixedItems() {\n    const fixedOrder = await createFixedOrderItem({\n      variables: {\n        fixedItems: fixedOrderItem\n      }\n    });\n    return fixedOrder;\n  }\n\n  async function convertCustomItems() {\n    const customOrder = await createCustomOrderItem({\n      variables: {\n        customItems: customOrderItem\n      }\n    });\n    return customOrder;\n  }\n\n  async function handleSubmit(e) {\n    var _paymentMethod$card, _paymentMethod$card2, _paymentMethod$card3, _fixedOrder$createFix, _customOrder$createCu, _fixedItems$allFoodCa3, _customItems$allSalad3;\n\n    e.preventDefault();\n    setLoading(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (error) {\n      setError(error);\n    }\n\n    const charge = `Brand: ${paymentMethod === null || paymentMethod === void 0 ? void 0 : (_paymentMethod$card = paymentMethod.card) === null || _paymentMethod$card === void 0 ? void 0 : _paymentMethod$card.brand}, Type: ${paymentMethod === null || paymentMethod === void 0 ? void 0 : (_paymentMethod$card2 = paymentMethod.card) === null || _paymentMethod$card2 === void 0 ? void 0 : _paymentMethod$card2.funding}, Last 4 digits: ${paymentMethod === null || paymentMethod === void 0 ? void 0 : (_paymentMethod$card3 = paymentMethod.card) === null || _paymentMethod$card3 === void 0 ? void 0 : _paymentMethod$card3.last4}`;\n    const {\n      data: customOrder\n    } = await convertCustomItems();\n    const {\n      data: fixedOrder\n    } = await convertFixedItems();\n    const customId = [];\n    const fixedId = [];\n    fixedOrder === null || fixedOrder === void 0 ? void 0 : (_fixedOrder$createFix = fixedOrder.createFixedOrderItems) === null || _fixedOrder$createFix === void 0 ? void 0 : _fixedOrder$createFix.map(item => {\n      fixedId.push({\n        id: item.id\n      });\n    });\n    customOrder === null || customOrder === void 0 ? void 0 : (_customOrder$createCu = customOrder.createCustomOrderItems) === null || _customOrder$createCu === void 0 ? void 0 : _customOrder$createCu.map(item => {\n      customId.push({\n        id: item.id\n      });\n    });\n    const {\n      data: order\n    } = await createOrder({\n      variables: {\n        fixedItems: fixedId,\n        customItems: customId,\n        firstName: orderForm.firstName,\n        lastName: orderForm.lastName,\n        email: orderForm.email,\n        charge,\n        total: fixedFoodPrice + customFoodPrice\n      }\n    });\n    const deleteCustom = [];\n    const deleteFixed = [];\n    fixedItems === null || fixedItems === void 0 ? void 0 : (_fixedItems$allFoodCa3 = fixedItems.allFoodCartItems) === null || _fixedItems$allFoodCa3 === void 0 ? void 0 : _fixedItems$allFoodCa3.map(item => {\n      deleteFixed.push(item.id);\n    });\n    customItems === null || customItems === void 0 ? void 0 : (_customItems$allSalad3 = customItems.allSaladCartItems) === null || _customItems$allSalad3 === void 0 ? void 0 : _customItems$allSalad3.map(item => {\n      deleteCustom.push(item.id);\n    });\n    await deleteCustomItems({\n      variables: {\n        ids: deleteCustom\n      }\n    });\n    await deleteFixedItems({\n      variables: {\n        ids: deleteFixed\n      }\n    });\n    closeCart();\n    router.push(`/order/${order.createOrder.id}`);\n  }\n\n  const options = [{\n    label: 'Tue, April 20th',\n    value: 'Tue, April 20th'\n  }, {\n    label: 'Wed, April 21st',\n    value: 'Wed, April 21th'\n  }, {\n    label: 'Thur, April 22nd',\n    value: 'Thur, April 22nd'\n  }, {\n    label: 'Fri, April 23rd',\n    value: 'Fri, April 23rd'\n  }];\n  const timeOptions = [{\n    label: '9:00 AM',\n    value: '9:00 AM'\n  }, {\n    label: '10:00 AM',\n    value: '10:00 AM'\n  }, {\n    label: '11:00 AM',\n    value: '11:00 AM'\n  }, {\n    label: '12:00 AM',\n    value: '12:00 AM'\n  }, {\n    label: '1:00 PM',\n    value: '1:00 PM'\n  }, {\n    label: '2:00 PM',\n    value: '2:00 PM'\n  }, {\n    label: '3:00 PM',\n    value: '3:00 PM'\n  }, {\n    label: '4:00 PM',\n    value: '4:00 PM'\n  }, {\n    label: '5:00 PM',\n    value: '5:00 PM'\n  }];\n  const customStyles = {\n    dropdownIndicator: () => ({\n      color: '#e5426c',\n      fontsize: '1rem'\n    }),\n    option: () => ({\n      color: '#e5426c'\n    }),\n    control: () => ({\n      border: '2px solid #e5426c',\n      borderRadius: '5px',\n      display: 'flex'\n    }),\n    placeholder: () => ({\n      color: '#e5426c'\n    }),\n    singleValue: () => ({\n      color: '#e5426c'\n    })\n  };\n  return /*#__PURE__*/_jsxs(CheckoutStyled, {\n    open: checkoutOpen,\n    children: [/*#__PURE__*/_jsx(\"button\", {\n      onClick: () => setCheckoutOpen(!checkoutOpen),\n      className: \"checkout-button\",\n      children: checkoutOpen ? 'Close' : 'Checkout'\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"orderDet\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"total-date\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"total\",\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"Order Subtotal:\"\n          }), /*#__PURE__*/_jsxs(\"span\", {\n            children: [\"$\", calcTotalPrice(fixedItems, customItems)]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"date-time\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"select-container\",\n            children: [/*#__PURE__*/_jsxs(\"h3\", {\n              children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n                className: \"icon\",\n                icon: faCalendar\n              }), \"Pick Up Date\"]\n            }), /*#__PURE__*/_jsx(Select, {\n              options: options,\n              styles: customStyles,\n              placeholder: 'Tue, April 20th'\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"select-container\",\n            children: [/*#__PURE__*/_jsxs(\"h3\", {\n              children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n                className: \"icon\",\n                icon: faClock\n              }), \"Pick Up Time\"]\n            }), /*#__PURE__*/_jsx(Select, {\n              options: timeOptions,\n              styles: customStyles,\n              placeholder: '9:00 AM'\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"names\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            placeholder: \"First Name\",\n            type: \"text\",\n            name: \"firstName\",\n            onChange: handleChange,\n            value: orderForm.firstName\n          }), /*#__PURE__*/_jsx(\"input\", {\n            placeholder: \"Last Name\",\n            type: \"text\",\n            name: \"lastName\",\n            onChange: handleChange,\n            value: orderForm.lastName\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"email\",\n          children: /*#__PURE__*/_jsx(\"input\", {\n            placeholder: \"Email Address\",\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            value: orderForm.email\n          })\n        }), error && /*#__PURE__*/_jsx(\"p\", {\n          children: error.message\n        }), /*#__PURE__*/_jsx(CardElement, {\n          className: \"card\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: \"checkout-button\",\n          children: \"Checkout Now\"\n        })]\n      })]\n    })]\n  });\n};\n\nfunction Checkout({\n  fixedItems,\n  customItems\n}) {\n  return /*#__PURE__*/_jsx(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsx(CheckoutForm, {\n      fixedItems: fixedItems,\n      customItems: customItems\n    })\n  });\n}\n\nexport default Checkout;","map":null,"metadata":{},"sourceType":"module"}